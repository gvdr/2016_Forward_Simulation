netEvolve <- function(phy, inherits = "copy", ancestral.interaction = TRUE){
    extlin <- get_extant_taxa(phy)
    edgelist <- tibble(
        mother = rep(NA, 1000)
        child_l = rep(NA, 1000)
        child_r = rep(NA, 1000)
        time.step = rep(NA, 1000)
        )
    if(ancestral.interaction == TRUE){
        edgelist$mother[1] = extlin[[1]]$mom
        edgelist$child_l[1] = extlin[[1]]$childs[1]
        edgelist$child_r[1] = extlin[[1]]$childs[2]
        edgelist$child_l[1] = extlin[[1]]$childs[2]
        edgelist$child_r[1] = extlin[[1]]$childs[1]
        time.step = extlin[[1]]$time
        ii <- 2
    } else { # this part need to be updated with the corresponding scenario's functions
        edgelist$mother[1] = extlin[[1]]$mom
        edgelist$child_l[1] = extlin[[1]]$childs[1]
        edgelist$child_r[1] = extlin[[1]]$childs[2]
        edgelist$child_l[1] = extlin[[1]]$childs[2]
        edgelist$child_r[1] = extlin[[1]]$childs[1]
        time.step = extlin[[1]]$time
        ii <- 1
    }
    for(i in ii:length(extlin)){
        if(inherits == "copy"){
            edgelist <- int_exact_copy(
                current_interactions = edgelist[which(edgelist$time == unique(edgelist$time)[i]), ],
                mom_number = edgelist$mother[which(edgelist$time == unique(edgelist$time)[i])],
                child_l_number = edgelist$child_l[which(edgelist$time == unique(edgelist$time)[i])],
                child_r_number = edgelist$child_r[which(edgelist$time == unique(edgelist$time)[i])],
                new_time = edgelist$time[which(edgelist$time == unique(edgelist$time)[i + 1])]
            )
        }
    }
    return(list(extant_lineages = extlin, edge_list = edgelist))
}
